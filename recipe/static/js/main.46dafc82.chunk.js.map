{"version":3,"sources":["images/profileIcon.svg","images/searchIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/shareIcon.svg","images/whiteHeartIcon.svg","images/blackHeartIcon.svg","actions/index.js","pages/Login.jsx","components/Header.jsx","services/theMealDBAPI.js","actions/themealdb.js","actions/searchBarAction.js","components/SearchBar.jsx","components/RecipeCards.jsx","components/CategoryButtons.jsx","components/Footer.jsx","actions/categoriesdbActions.js","pages/MainPageFoods.jsx","pages/MainPageDrinks.jsx","actions/detailActionsId.js","actions/detailActionsRecomand.js","components/ShareButton.jsx","components/FavoriteButton.jsx","actions/favoriteAction.js","components/RecipeDetails.jsx","services/listIngredients.js","components/Ingredients.jsx","components/RecipeVideo.jsx","components/RecomendationCards.jsx","components/StartRecipe.jsx","pages/DetailsPage.jsx","pages/RecipeInProgress.jsx","components/ExploreHeader.jsx","pages/DoneRecipes.jsx","pages/FavoriteRecipes.jsx","pages/Explore.jsx","actions/RandomActions.js","pages/ExploreDrinksOrMeals.jsx","actions/ingredientsActions.js","pages/ExploreByIngredients.jsx","actions/areaActions.js","pages/ExploreByArea.jsx","pages/Profile.jsx","pages/NotFound.jsx","App.js","reducers/ThemealDB.js","reducers/searchBar.js","reducers/saveEmail.js","reducers/saveLocation.js","reducers/CategoriesReducer.js","reducers/startRecipe.js","reducers/DetailReducer.js","reducers/FavoritesReducer.js","reducers/IngredientsReducer.js","reducers/AreaReducer.js","reducers/index.js","types/Themealdb.js","store/index.js","index.js"],"names":["module","exports","changeLocation","payload","type","connect","dispatch","saveMail","saveUserEmail","useState","validEmail","setValidEmail","validPassword","setValidPassword","email","setEmail","className","data-testid","placeholder","onChange","event","value","match","checkEmail","target","length","to","disabled","onClick","localStorage","setItem","JSON","stringify","changeIsVisible","title","src","profileIcon","alt","searchIcon","getRecipesAPI","url","a","console","log","fetch","then","recipes","json","ok","Promise","resolve","reject","FetchThemealAPI","searchSetting","state","typepage","updateLocation","currentLocation","pageType","searchOption","searchedValue","callAPI","data","requestThemealAPISuccess","error","receiveThemealAPIFailure","message","updateSearchBar","setSearchSetting","name","SearchBar","useSelector","ThemealDB","recipesEqualOne","recipeId","useDispatch","initialPath","currLocation","id","pathname","getPageType","useEffect","alert","Object","keys","routingAfterAPI","push","htmlFor","rendersSearchInput","label","testid","map","item","key","rendersSearchOption","recipeType","recipeID","recipe","idMeal","idDrink","slice","index","class","style","width","categories","CategoriesReducer","selectedCategory","setSelectedCategory","handleClick","toggleFilter","role","strCategory","Footer","drinkIcon","exploreIcon","mealIcon","FetchCategoriesAPI","requestCategoriesAPISuccess","receiveCategoriesAPIFailure","searchBarVisible","searchBar","isVisible","isFetching","isFetchingCategories","isFetchByIngredient","saveLocation","window","location","requestDetailIdAPI","FetchDetailIdAPI","requestDetailIdAPISuccess","receiveDetailIdAPIFailure","requestDetailRecomadAPI","FetchDetailRecomandAPI","requestDetailRecomandAPISuccess","receiveDetailRecomandAPIFailure","copy","require","ShareButton","props","testidBtn","idInput","copyToClipBoard","setCopyToClipBoard","shareIcon","handleFavorite","favorite","setFavorite","favoriteRecipesFiltered","parse","getItem","filter","removeFavorite","alcoholicValue","areaValue","strArea","strAlcoholic","newFavorite","area","category","alcoholicOrNot","image","favoriteRecipes","addFavorite","FavoriteButton","backgroundBtn","blackHeartIcon","whiteHeartIcon","checkIfFavorite","DetailReducer","values","strInstructions","filteredIngredients","filteredMeasures","objIngredients","forEach","includes","handleIngredients","handleMeasures","ingredients","ingr","i","entries","strYoutube","replace","height","recomendation","counter","setCounter","recomendationType","display","btnStart","startRecipe","params","ExploreHeader","DoneRecipes","FavoriteRecipes","favoriteListFetching","FavoritesReducer","setFavoriteRecipes","filterSetting","setFilterSetting","rendersFilterOption","Explore","FetchRandomAPI","requestRandomAPISuccess","receiveRandomAPIFailure","isFetchingRandom","redirect","setRedirect","pageURL","headerTitle","FetchIngredientsAPI","requestIngredientsAPISuccess","receiveIngredientsAPIFailure","isFetchingIngredients","IngredientsReducer","isFetchingRecipes","arrIngredients","ingredientType","ingredient","preventDefault","FetchAreaAPI","requestAreaAPISuccess","receiveAreaAPIFailure","isFetchingArea","AreaReducer","areas","arrAreas","defaultValue","Profile","userLocalStorage","setUserLocalStorage","clear","NotFound","App","exact","path","component","Login","MainPageFoods","MainPageDrinks","DetailsPage","RecipeInProgress","ExploreDrinksOrMeals","ExploreByIngredient","ExploreByArea","initialState","INITIAL_STATE","searchResultMoreOne","action","saveEmail","errorAPICategories","isFetchingIdDetail","error_id","error_recomendation","error_random","errorAPIIngredients","errorAPIAreas","rootReducer","combineReducers","isFetchingRecomandDetail","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46dafc82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","export const CHANGE_VISIBILITY = 'CHANGE_VISIBILITY';\nexport const SAVE_EMAIL = 'SAVE_EMAIL';\nexport const CHANGE_LOCATION = 'CHANGE_LOCATION';\nexport const CHANGE_BTN_START = 'CHANGE_BTN_START';\n\nexport const changeVisibility = () => ({\n  type: CHANGE_VISIBILITY,\n});\n\nexport const saveUserEmail = (payload) => ({\n  type: SAVE_EMAIL,\n  payload,\n});\n\nexport const changeLocation = (payload) => ({\n  type: CHANGE_LOCATION,\n  payload,\n});\n\nexport const changeBtnStart = () => ({\n  type: CHANGE_BTN_START,\n});\n","import React, { useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { saveUserEmail } from '../actions/index';\nimport './Login.css';\n\nconst Login = ({ saveMail }) => {\n  const [validEmail, setValidEmail] = useState(false);\n  const [validPassword, setValidPassword] = useState(false);\n  const [email, setEmail] = useState('');\n\n  const checkEmail = (value) => {\n    setEmail(value);\n    const regexEmail = /[A-Z0-9]{1,}@[A-Z0-9]{2,}\\.[A-Z0-9]{2,}/i;\n    return value.match(regexEmail) ? setValidEmail(true) : setValidEmail(false);\n  };\n\n  const checkPassword = (pass) => (\n    pass.length > 6 ? setValidPassword(true) : setValidPassword(false)\n  );\n\n  const handleLogin = () => {\n    localStorage.setItem('mealsToken', '1');\n    localStorage.setItem('cocktailsToken', '1');\n    localStorage.setItem('user', JSON.stringify({ email }));\n    saveMail(email);\n  };\n\n  // useEffect(() => \n  \n  // document.body.style.backgroundColor= '#37b9e6',\n   \n  // );\n\n  return (\n\n      <div className=\"simple-login-container\">\n        <h2>Login</h2>\n        <div className=\"row\">\n          <div className=\"col-md-12 form-group\">\n            <input\n              className=\"form-control\"\n              type=\"email\"\n              data-testid=\"email-input\"\n              placeholder=\"Email\"\n              onChange={(event) => checkEmail(event.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12 form-group\">\n            <input\n              className=\"form-control\"\n              type=\"password\"\n              data-testid=\"password-input\"\n              placeholder=\"Senha\"\n              onChange={(event) => checkPassword(event.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12 form-group\">\n            <Link to=\"/comidas\">\n              <button\n                type=\"button\"\n                className=\"btn btn-block btn-login\"\n                data-testid=\"login-submit-btn\"\n                disabled={!validEmail || !validPassword}\n                onClick={() => handleLogin()}\n              >\n                Entrar\n        </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveMail: (payload) => dispatch(saveUserEmail(payload)),\n});\n\nLogin.propTypes = {\n  saveMail: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { changeVisibility } from '../actions/index';\n\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\n\nimport './Header.css';\n\nconst Header = ({ changeIsVisible, title }) => (\n  <header className=\"header-foods-drinks\">\n    <Link to=\"/perfil\">\n      <img src={profileIcon} alt=\"Profile Icon\" data-testid=\"profile-top-btn\" />\n    </Link>\n    <h3 data-testid=\"page-title\">{title}</h3>\n    <input type=\"image\" onClick={() => changeIsVisible()}\n   src={searchIcon} alt=\"Search Icon\" data-testid=\"search-top-btn\" />\n  </header>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeIsVisible: () => dispatch(changeVisibility()),\n});\n\nHeader.propTypes = {\n  changeIsVisible: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Header);\n","  export default async function getRecipesAPI(url) {\n    console.log('API getbyRecipes', url);\n    return fetch(url).then((recipes) => recipes\n      .json()\n      .then((json) => (recipes.ok ? Promise.resolve(json) : Promise.reject(json))));\n  }\n","import getRecipesAPI from '../services/theMealDBAPI';\n\nexport const REQUEST_THEMEALAPI = 'REQUEST_THEMEALAPI';\nexport const RECEIVE_THEMEALAPI_SUCCESS = 'RECEIVE_THEMEALAPI_SUCCESS';\nexport const RECEIVE_THEMEALAPI_FAILURE = 'RECEIVE_THEMEALAPI_FAILURE';\nexport const REQUEST_RESET_FETCH_STATE = 'REQUEST_RESET_FETCH_STATE';\nexport const REQUEST_RESET_RECIPES_STATE = 'REQUEST_RESET_RECIPES_STATE';\n\nexport const FETCH_BY_INGREDIENT = 'FETCH_BY_INGREDIENT';\nexport const CHANGE_FETCH_BY_INGREDIENT = 'CHANGE_FETCH_BY_INGREDIENT';\n\nexport const requestResetAPI = () => ({\n  type: REQUEST_RESET_FETCH_STATE,\n});\n\nexport const requestResetRecipes = () => ({\n  type: REQUEST_RESET_RECIPES_STATE,\n});\n\nexport const fetchByIngredient = () => ({\n  type: FETCH_BY_INGREDIENT,\n});\n\nexport const changeFetchByIngredient = () => ({\n  type: CHANGE_FETCH_BY_INGREDIENT,\n});\n\nconst requestThemealAPI = () => ({\n  type: REQUEST_THEMEALAPI,\n});\n\nconst requestThemealAPISuccess = (data) => ({\n  type: RECEIVE_THEMEALAPI_SUCCESS,\n  payload: data,\n});\n\nconst receiveThemealAPIFailure = (error) => ({\n  type: RECEIVE_THEMEALAPI_FAILURE,\n  payload: error,\n});\n\nfunction callAPI(searchSetting, typepage) {\n  const pageType = typepage === '/comidas' ? 'themeal' : 'thecocktail';\n  let url = '';\n  switch (searchSetting.searchOption) {\n    case 'ingredient':\n      url = `https://www.${pageType}db.com/api/json/v1/1/filter.php?i=${searchSetting.searchedValue}`;\n      break;\n    case 'name':\n      url = `https://www.${pageType}db.com/api/json/v1/1/search.php?s=${searchSetting.searchedValue}`;\n      break;\n    case 'firstLetter':\n      url = `https://www.${pageType}db.com/api/json/v1/1/search.php?f=${searchSetting.searchedValue}`;\n      break;\n    case 'category':\n      url = `https://www.${pageType}db.com/api/json/v1/1/filter.php?c=${searchSetting.searchedValue}`;\n      break;\n    case 'area':\n      url = `https://www.${pageType}db.com/api/json/v1/1/filter.php?a=${searchSetting.searchedValue}`;\n      break;\n    default:\n      url = `https://www.${pageType}db.com/api/json/v1/1/search.php?s=${searchSetting.searchedValue}`;\n  }\n  return getRecipesAPI(url);\n}\n\nexport default function FetchThemealAPI(searchSetting) {\n  requestThemealAPI();\n  return (dispatch, state) => {\n    const {\n      updateLocation: { currentLocation: typepage },\n    } = state();\n    dispatch(requestThemealAPI());\n    return callAPI(searchSetting, typepage).then(\n      (data) => dispatch(requestThemealAPISuccess(data)),\n      (error) => dispatch(receiveThemealAPIFailure(error.message)),\n    );\n  };\n}\n","export const SEARCH_RESULT_MORE_ONE = 'SEARCH_RESULT_MORE_ONE';\n\nexport const searchResultMoreOne = () => ({\n  type: SEARCH_RESULT_MORE_ONE,\n});\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport FetchThemealAPI, { requestResetAPI, requestResetRecipes } from '../actions/themealdb';\nimport { searchResultMoreOne } from '../actions/searchBarAction';\n\nconst updateSearchBar = (event, searchSetting, setSearchSetting) => {\n  setSearchSetting({ ...searchSetting, [event.target.name]: event.target.value });\n};\nconst rendersSearchInput = (searchSetting, setSearchSetting) => (\n  <div className=\"form-group\">\n    <label htmlFor=\"searchInput\">\n      <input\n        className=\"form-control\"\n        name=\"searchedValue\"\n        type=\"text\"\n        value={searchSetting.searchedValue}\n        data-testid=\"search-input\"\n        placeholder=\"Digit aqui sua busca\"\n        onChange={(event) =>\n          updateSearchBar(event, searchSetting, setSearchSetting)\n        }\n      />\n    </label>\n  </div>\n);\nconst rendersSearchOption = (searchSetting, setSearchSetting) => {\n  const searchOptionInput = [{ label: 'ingredient', value: 'ingredient', testid: 'ingredient-search-radio' },\n  { label: 'Nome', value: 'name', testid: 'name-search-radio' },\n  { label: 'Primeira letra', value: 'firstLetter', testid: 'first-letter-search-radio' },\n  ];\n  return (\n    <form>\n        {searchOptionInput.map((item) => (\n      <div className=\"form-check form-check-inline\">\n          <label className=\"form-check-label\" htmlFor=\"searchedOption\" key={item.label}>\n            {item.label}\n            <input\n              className=\"form-check-input\"\n              name=\"searchOption\"\n              type=\"radio\"\n              value={item.value}\n              data-testid={item.testid}\n              onChange={(event) =>\n                updateSearchBar(event, searchSetting, setSearchSetting)\n              }\n            />\n          </label>\n        </div>\n        ))\n        }\n      </form>\n  );\n};\nconst routingAfterAPI = (recipes, dispatch, searchSetting, setSearchSetting) => {\n  if (recipes == null) {\n    dispatch(requestResetRecipes());\n    return alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n  }\n  if (recipes.length === 1) {\n    const id = `${recipes[0][Object.keys(recipes[0])[0]]}`;\n    return setSearchSetting({ ...searchSetting, recipesEqualOne: true, recipeId: id });\n  }\n  if (recipes.length > 1) return dispatch(searchResultMoreOne());\n  return null;\n};\n\n\nconst getPageType = (currLocation, id) => {\n  let pathname;\n  if (currLocation === '/comidas') pathname = `/comidas/${id}`;\n  if (currLocation === '/bebidas') pathname = `/bebidas/${id}`;\n  return pathname;\n};\n\n\nconst SearchBar = () => {\n  const { recipes } = useSelector((state) => state.ThemealDB);\n  const { currentLocation } = useSelector((state) => state.updateLocation);\n  const [searchSetting, setSearchSetting] = useState({\n    searchedValue: '',\n    searchOption: '',\n    recipesEqualOne: false,\n    recipeId: '',\n  });\n  const dispatch = useDispatch();\n  const id = searchSetting.recipeId;\n\n  // const initialPath = currentLocation === '/comidas' ? `/comidas/${id}` : `/bebidas/${id}`;\n  const initialPath = getPageType(currentLocation, id);\n\n  useEffect(() => {\n    dispatch(requestResetAPI());\n    setSearchSetting({ ...searchSetting, recipesEqualOne: false });\n  }, []); //  reset isFetching to false when load\n  useEffect(() => {\n    routingAfterAPI(recipes, dispatch, searchSetting, setSearchSetting);\n  }, [recipes]);\n  const submitSearch = () => {\n    if (searchSetting.searchOption === 'firstLetter' && searchSetting.searchedValue.length > 1) {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    } else {\n      dispatch(FetchThemealAPI(searchSetting));\n    }\n  };\n  return (\n    <div className=\"container-fluid justify-content-center\">\n      {searchSetting.recipesEqualOne ? (<Redirect push to={`${initialPath}`} />) : null}\n      {rendersSearchInput(searchSetting, setSearchSetting)}\n      {rendersSearchOption(searchSetting, setSearchSetting)}\n      <button className=\"btn btn-info\" data-testid=\"exec-search-btn\" onClick={() => submitSearch()}>\n        search\n    </button>\n    </div>\n  );\n};\nexport default SearchBar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './RecipeCards.css';\n\nconst RecipeCards = ({ recipes, currentLocation }) => {\n  const recipeType = currentLocation === '/comidas' ? 'Meal' : 'Drink';\n\n  const recipeID = (recipe, currLocation) => {\n    let id;\n    if (currLocation === '/comidas') id = recipe.idMeal;\n    else id = recipe.idDrink;\n    return id;\n  };\n\n  return (\n    <div className=\"container\">\n      {recipes.slice(0, 12).map((recipe, index) => (\n        <div class=\"row justify-content-center m-3\">\n          <div class=\"card text-center\" style={{ width: '18rem' }}>\n            <Link to={`${currentLocation}/${recipeID(recipe, currentLocation)}`}>\n              <div key={recipe[`id${recipeType}`]} data-testid={`${index}-recipe-card`}>\n                <img\n                  data-testid={`${index}-card-img`}\n                  src={recipe[`str${recipeType}Thumb`]}\n                  alt={`${recipeType} Card`}\n                  className=\"card-img-top\"\n                />\n                <div class=\"card-body\">\n                  <h4 data-testid={`${index}-card-name`} className=\"card-title text-secondary\">{recipe[`str${recipeType}`]}</h4>\n                </div>\n              </div>\n            </Link>\n          </div>\n        </div>\n      ))}\n    </div>)\n};\n\nconst mapStateToProps = (state) => ({\n  recipes: state.ThemealDB.recipes,\n  currentLocation: state.updateLocation.currentLocation,\n});\n\nRecipeCards.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currentLocation: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, null)(RecipeCards);\n","import React, { useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport FetchThemealAPI from '../actions/themealdb';\n\nconst CategoryButtons = ({ categories }) => {\n  const dispatch = useDispatch();\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const toggleFilter = (value) => {\n    if (selectedCategory === value) {\n      dispatch(FetchThemealAPI({ searchedValue: '' }));\n      setSelectedCategory('');\n    } else {\n      dispatch(\n        FetchThemealAPI({\n          searchOption: 'category',\n          searchedValue: value,\n        }),\n      );\n    }\n  };\n\n  const handleClick = (value) => {\n    setSelectedCategory(value);\n    toggleFilter(value);\n  };\n\n  return (\n    <div className=\"btn-group flex-wrap container-fluid mt-2 mb-1\" role=\"group\">\n      <button\n        className=\"btn btn-outline-info\"\n        data-testid=\"All-category-filter\"\n        type=\"button\"\n        onClick={() => dispatch(FetchThemealAPI({ searchedValue: '' }))}\n      >\n        All\n      </button>\n      {categories.slice(0, 5).map((item) => (\n        <button\n          className=\"btn btn-info\"\n          data-testid={`${item.strCategory}-category-filter`}\n          key={item.strCategory}\n          value={item.strCategory}\n          type=\"button\"\n          onClick={(event) => handleClick(event.target.value)}\n        >\n          {item.strCategory}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  categories: state.CategoriesReducer.categories,\n});\n\nCategoryButtons.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(mapStateToProps, null)(CategoryButtons);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\n\nimport './Footer.css';\n\nconst Footer = () => (\n  <footer data-testid=\"footer\" className=\"footer\">\n    <Link to=\"/bebidas\">\n      <img data-testid=\"drinks-bottom-btn\" src={drinkIcon} alt=\"Drink Icon\" />\n    </Link>\n    <Link to=\"/explorar\">\n      <img\n        data-testid=\"explore-bottom-btn\"\n        src={exploreIcon}\n        alt=\"Explore Icon\"\n      />\n    </Link>\n    <Link to=\"/comidas\">\n      <img data-testid=\"food-bottom-btn\" src={mealIcon} alt=\"Meal Icon\" />\n    </Link>\n  </footer>\n);\n\nexport default Footer;\n","import getRecipesAPI from '../services/theMealDBAPI';\n\nexport const REQUEST_CATEGORIESAPI = 'REQUEST_CATEGORIESAPI';\nexport const RECEIVE_CATEGORIESAPI_SUCCESS = 'RECEIVE_CATEGORIESAPI_SUCCESS';\nexport const RECEIVE_CATEGORIESAPI_FAILURE = 'RECEIVE_CATEGORIESAPI_FAILURE';\nexport const REQUEST_RESET_FETCH_CATEGORIES_STATE =\n  'REQUEST_RESET_FETCH_CATEGORIES_STATE';\nexport const REQUEST_RESET_CATEGORIES_STATE = 'REQUEST_RESET_CATEGORIES_STATE';\n\nexport const requestResetCategoriesAPI = () => ({\n  type: REQUEST_RESET_FETCH_CATEGORIES_STATE,\n});\n\nexport const requestResetCategories = () => ({\n  type: REQUEST_RESET_CATEGORIES_STATE,\n});\n\nconst requestCategoriesAPI = () => ({\n  type: REQUEST_CATEGORIESAPI,\n});\n\nconst requestCategoriesAPISuccess = (data) => ({\n  type: RECEIVE_CATEGORIESAPI_SUCCESS,\n  payload: data,\n});\n\nconst receiveCategoriesAPIFailure = (error) => ({\n  type: RECEIVE_CATEGORIESAPI_FAILURE,\n  payload: error,\n});\n\nfunction callAPI(typepage) {\n  const pageType = typepage === '/comidas' ? 'themeal' : 'thecocktail';\n  const url = `https://www.${pageType}db.com/api/json/v1/1/list.php?c=list`;\n  return getRecipesAPI(url);\n}\n\nexport default function FetchCategoriesAPI() {\n  requestCategoriesAPI();\n  return (dispatch, state) => {\n    const {\n      updateLocation: { currentLocation: typepage },\n    } = state();\n    // typepage = '/comidas'; //MUST_REMOVE\n    dispatch(requestCategoriesAPI());\n    return callAPI(typepage).then(\n      (data) => dispatch(requestCategoriesAPISuccess(data)),\n      (error) => dispatch(receiveCategoriesAPIFailure(error.message)),\n    );\n  };\n}\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useDispatch } from 'react-redux';\nimport Header from '../components/Header';\nimport SearchBar from '../components/SearchBar';\nimport RecipeCards from '../components/RecipeCards';\nimport CategoryButtons from '../components/CategoryButtons';\nimport Footer from '../components/Footer';\n\nimport { changeLocation } from '../actions/index';\nimport FetchThemealAPI, { changeFetchByIngredient } from '../actions/themealdb';\nimport FetchCategoriesAPI from '../actions/categoriesdbActions';\n\nconst MainPageFoods = ({\n  searchBarVisible,\n  isFetching,\n  saveLocation,\n  isFetchingCategories,\n  categories,\n  recipes,\n  isFetchByIngredient,\n}) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    saveLocation(window.location.pathname);\n    dispatch(FetchCategoriesAPI());\n    if (!isFetchByIngredient) {\n      dispatch(FetchThemealAPI({ searchedValue: '' }));\n    }\n    dispatch(changeFetchByIngredient());\n  }, []);\n\n  return (\n    <div>\n      <Header title={'Comidas'} />\n      {!isFetchingCategories && categories.length > 0 && <CategoryButtons />}\n      {searchBarVisible && <SearchBar />}\n      {isFetching && 'Loading...'}\n      {!isFetching && recipes !== null && <RecipeCards />}\n      <Footer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  searchBarVisible: state.searchBar.isVisible,\n  isFetching: state.ThemealDB.isFetching,\n  recipes: state.ThemealDB.recipes,\n  isFetchingCategories: state.CategoriesReducer.isFetchingCategories,\n  categories: state.CategoriesReducer.categories,\n  isFetchByIngredient: state.ThemealDB.isFetchByIngredient,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveLocation: (payload) => dispatch(changeLocation(payload)),\n});\n\nMainPageFoods.propTypes = {\n  searchBarVisible: PropTypes.bool.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  saveLocation: PropTypes.func.isRequired,\n  recipes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isFetchingCategories: PropTypes.bool.isRequired,\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isFetchByIngredient: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPageFoods);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useDispatch } from 'react-redux';\n\nimport Header from '../components/Header';\nimport SearchBar from '../components/SearchBar';\nimport RecipeCards from '../components/RecipeCards';\nimport CategoryButtons from '../components/CategoryButtons';\nimport Footer from '../components/Footer';\n\nimport { changeLocation } from '../actions/index';\nimport FetchThemealAPI, { changeFetchByIngredient } from '../actions/themealdb';\nimport FetchCategoriesAPI from '../actions/categoriesdbActions';\n\nconst MainPageDrinks = ({\n  searchBarVisible,\n  isFetching,\n  saveLocation,\n  isFetchingCategories,\n  categories,\n  recipes,\n  isFetchByIngredient,\n}) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    saveLocation(window.location.pathname);\n    dispatch(FetchCategoriesAPI());\n    if (!isFetchByIngredient) {\n      dispatch(FetchThemealAPI({ searchedValue: '' }));\n    }\n    dispatch(changeFetchByIngredient());\n  }, []);\n\n  return (\n    <div>\n      <Header title={'Bebidas'} />\n      {!isFetchingCategories && categories.length > 0 && <CategoryButtons />}\n      {searchBarVisible && <SearchBar />}\n      {isFetching && 'Loading...'}\n      {!isFetching && recipes !== null && <RecipeCards />}\n      <Footer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  searchBarVisible: state.searchBar.isVisible,\n  isFetching: state.ThemealDB.isFetching,\n  recipes: state.ThemealDB.recipes,\n  isFetchingCategories: state.CategoriesReducer.isFetchingCategories,\n  categories: state.CategoriesReducer.categories,\n  isFetchByIngredient: state.ThemealDB.isFetchByIngredient,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveLocation: (payload) => dispatch(changeLocation(payload)),\n});\n\nMainPageDrinks.propTypes = {\n  searchBarVisible: PropTypes.bool.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  saveLocation: PropTypes.func.isRequired,\n  recipes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isFetchingCategories: PropTypes.bool.isRequired,\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isFetchByIngredient: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPageDrinks);\n","import getRecipesAPI from '../services/theMealDBAPI';\n\nexport const REQUEST_DETAIL_ID_API = 'REQUEST_DETAIL_ID_API';\nexport const RECEIVE_DETAIL_ID_API_SUCCESS = 'RECEIVE_DETAIL_ID_API_SUCCESS';\nexport const RECEIVE_DETAIL_ID_API_FAILURE = 'RECEIVE_DETAIL_ID_API_FAILURE';\n\nconst requestDetailIdAPI = () => ({\n  type: REQUEST_DETAIL_ID_API,\n});\n\nconst requestDetailIdAPISuccess = (data) => ({\n  type: RECEIVE_DETAIL_ID_API_SUCCESS,\n  payload: data,\n});\n\nconst receiveDetailIdAPIFailure = (error) => ({\n  type: RECEIVE_DETAIL_ID_API_FAILURE,\n  payload: error,\n});\n\nfunction callAPI(searchSetting, typepage) {\n  const pageType = typepage === '/comidas' ? 'themeal' : 'thecocktail';\n  const url = `https://www.${pageType}db.com/api/json/v1/1/lookup.php?i=${searchSetting.searchedValue}`;\n  return getRecipesAPI(url);\n}\n\nexport default function FetchDetailIdAPI(searchSetting) {\n  return (dispatch, state) => {\n    const {\n      updateLocation: { currentLocation: typepage },\n    } = state();\n    dispatch(requestDetailIdAPI);\n    return callAPI(searchSetting, typepage).then(\n      (data) => dispatch(requestDetailIdAPISuccess(data)),\n      (error) => dispatch(receiveDetailIdAPIFailure(error.message)),\n    );\n  };\n}\n","import getRecipesAPI from '../services/theMealDBAPI';\n\nexport const REQUEST_DETAIL_RECOMAND_API = 'REQUEST_DETAIL_RECOMAND_API';\nexport const RECEIVE_DETAIL_RECOMAND_API_SUCCESS =\n  'RECEIVE_DETAIL_RECOMAND_API_SUCCESS';\nexport const RECEIVE_DETAIL_RECOMAND_API_FAILURE =\n  'RECEIVE_DETAIL_RECOMAND_API_FAILURE';\n\nconst requestDetailRecomadAPI = () => ({\n  type: REQUEST_DETAIL_RECOMAND_API,\n});\n\nconst requestDetailRecomandAPISuccess = (data) => ({\n  type: RECEIVE_DETAIL_RECOMAND_API_SUCCESS,\n  payload: data,\n});\n\nconst receiveDetailRecomandAPIFailure = (error) => ({\n  type: RECEIVE_DETAIL_RECOMAND_API_FAILURE,\n  payload: error,\n});\n\nfunction callAPI(searchSetting) {\n  let url = '';\n  switch (searchSetting.searchOption) {\n    case 'recommendation_drink':\n      url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n      break;\n    case 'recommendation_food':\n      url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n      break;\n    default:\n      url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  }\n  return getRecipesAPI(url);\n}\n\nexport default function FetchDetailRecomandAPI(searchSetting) {\n  return (dispatch) => {\n    dispatch(requestDetailRecomadAPI);\n    return callAPI(searchSetting).then(\n      (data) => dispatch(requestDetailRecomandAPISuccess(data)),\n      (error) => dispatch(receiveDetailRecomandAPIFailure(error.message)),\n    );\n  };\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './ShareFavButtons.css';\nimport shareIcon from '../images/shareIcon.svg';\n\nconst copy = require('clipboard-copy');\n\nconst ShareButton = (props) => {\n  let testidBtn = 'share-btn';\n  if (typeof props.testid !== 'undefined') {\n    testidBtn = `${props.testid}-horizontal-share-btn`;\n  }\n  let id = window.location.pathname;\n  if (typeof props.idInput !== 'undefined') {\n    id = `/${props.type}/${props.idInput}`;\n  }\n  const [copyToClipBoard, setCopyToClipBoard] = useState(false);\n  const handleCopyClipBoard = () => {\n    copy(`http://localhost:3000${id}`);\n    setCopyToClipBoard(true);\n  };\n  return (\n    <div>\n      <input\n        type=\"image\"\n        data-testid={testidBtn}\n        className=\"share-fav-buttons\"\n        onClick={() => handleCopyClipBoard()}\n        src={shareIcon}\n        alt=\"Share Button\"\n      />\n      {copyToClipBoard && <span>Link copiado!</span>}\n    </div>\n  );\n};\n\nShareButton.propTypes = {\n  idInput: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  testid: PropTypes.string.isRequired,\n};\n\nexport default ShareButton;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { requestFavoriteFetching, favoriteFetchingSuccess } from '../actions/favoriteAction';\nimport './ShareFavButtons.css';\n\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nconst checkIfFavorite = (props, favorite, setFavorite) => {\n  const id = props.recipe[0][Object.keys(props.recipe[0])[0]];\n  let favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (favoriteRecipes === null) favoriteRecipes = [''];\n  favoriteRecipes.map((recipe) => {\n    if (recipe.id === id) setFavorite(true);\n    return null;\n  });\n};\nconst addFavorite = (props, dispatch) => {\n  const recipeType = props.recipeType;\n  const recipe = props.recipe[0];\n  let alcoholicValue = '';\n  let areaValue = '';\n  let type = 'comida';\n  if (recipeType === 'Meal') {\n    areaValue = recipe.strArea;\n  } else {\n    alcoholicValue = recipe.strAlcoholic;\n    type = 'bebida';\n  }\n\n  const newFavorite = {\n    id: recipe[`id${recipeType}`],\n    type,\n    area: areaValue,\n    category: recipe.strCategory,\n    alcoholicOrNot: alcoholicValue,\n    name: recipe[`str${recipeType}`],\n    image: recipe[`str${recipeType}Thumb`],\n  };\n\n  dispatch(requestFavoriteFetching());\n  let favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (favoriteRecipes === null) {\n    favoriteRecipes = [newFavorite];\n  } else {\n    favoriteRecipes.push(newFavorite);\n  }\n\n  localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n  dispatch(favoriteFetchingSuccess());\n};\n\nconst removeFavorite = (props, dispatch) => {\n  dispatch(requestFavoriteFetching());\n  const id = props.recipe[0][Object.keys(props.recipe[0])[0]];\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const favoriteRecipesFiltered = favoriteRecipes.filter((recipe) => recipe.id !== id);\n  localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipesFiltered));\n  dispatch(favoriteFetchingSuccess());\n};\n\nconst handleFavorite = (favorite, setFavorite, props, dispatch) => {\n  if (favorite === true) {\n    removeFavorite(props, dispatch);\n  } else {\n    addFavorite(props, dispatch);\n  }\n  setFavorite(!favorite);\n};\n\nconst FavoriteButton = (props) => {\n  let testidBtn = 'favorite-btn';\n  if (typeof props.testid !== 'undefined') testidBtn = `${props.testid}-horizontal-favorite-btn`;\n  const dispatch = useDispatch();\n  const [favorite, setFavorite] = useState(false);\n  const backgroundBtn = favorite ? blackHeartIcon : whiteHeartIcon;\n  useEffect(() => {\n    checkIfFavorite(props, favorite, setFavorite);\n  }, []);\n\n  return (\n    <input\n      type=\"image\"\n      data-testid={testidBtn}\n      className=\"share-fav-buttons\"\n      onClick={() => handleFavorite(favorite, setFavorite, props, dispatch)}\n      src={backgroundBtn} alt=\"Favorite Button\"\n    />\n  );\n};\n\nFavoriteButton.propTypes = {\n  testid: PropTypes.string.isRequired,\n};\n\nexport default FavoriteButton;\n","export const REQUEST_FAVORITE_FETCHING = 'REQUEST_FAVORITE_FETCHING';\nexport const RECEIVE_FAVORITE_FETCHING_SUCCESS = 'RECEIVE_FAVORITE_FETCHING_SUCCESS';\n\nexport const requestFavoriteFetching = () => ({\n  type: REQUEST_FAVORITE_FETCHING,\n});\n\nexport const favoriteFetchingSuccess = () => ({\n  type: RECEIVE_FAVORITE_FETCHING_SUCCESS,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ShareButton from '../components/ShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\n\nimport './RecipeCards.css';\n\nconst RecipeDetails = ({ recipe, currentLocation }) => {\n  const recipeType = currentLocation === '/comidas' ? 'Meal' : 'Drink';\n  const category = currentLocation === '/comidas' ? 'Category' : 'Alcoholic';\n\n  return (\n    <div>\n      <ShareButton\n        type={currentLocation.slice(1)}\n        idInput={Object.values(recipe[0])[0]}\n      />\n      <FavoriteButton recipe={recipe} recipeType={recipeType} />\n      {recipe.map((item) => (\n        <div key={item[`id${recipeType}`]}>\n          <div>\n            <img\n              data-testid=\"recipe-photo\"\n              src={item[`str${recipeType}Thumb`]}\n              alt={`${recipeType} Card`}\n              className=\"recipe-photo\"\n            />\n            <h1 data-testid=\"recipe-title\">{item[`str${recipeType}`]}</h1>\n            <h4 data-testid=\"recipe-category\">{item[`str${category}`]}</h4>\n          </div>\n          <h3>Instructions</h3>\n          <p data-testid=\"instructions\">{item.strInstructions}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  recipe: state.DetailReducer.id,\n  currentLocation: state.updateLocation.currentLocation,\n});\n\nRecipeDetails.propTypes = {\n  recipe: PropTypes.arrayOf(PropTypes.string).isRequired,\n  currentLocation: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, null)(RecipeDetails);\n","const filteredIngredients = [];\nconst filteredMeasures = [];\n\nconst handleIngredients = (recipe) => {\n  Object.keys(recipe[0]).forEach(function (item) {\n    if (\n      item.includes('strIngredient') &&\n      recipe[0][item] !== '' &&\n      recipe[0][item] !== null\n    ) {\n      filteredIngredients.push(recipe[0][item]);\n    }\n  });\n  return filteredIngredients;\n};\n\nconst handleMeasures = (recipe) => {\n  Object.keys(recipe[0]).forEach(function (item) {\n    if (\n      item.includes('strMeasure') &&\n      recipe[0][item] !== ' ' &&\n      recipe[0][item] !== null\n    ) {\n      filteredMeasures.push(recipe[0][item]);\n    }\n  });\n  return filteredMeasures;\n};\n\nconst objIngredients = (recipe) => {\n  handleIngredients(recipe);\n  handleMeasures(recipe);\n  const ingredients = {};\n  filteredIngredients.forEach(\n    (ingr, i) => (ingredients[ingr] = filteredMeasures[i]),\n  );\n\n  return ingredients;\n};\n\nexport default objIngredients;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport objIngredients from '../services/listIngredients';\n\nconst Ingredients = ({ recipe }) =>\n  Object.entries(objIngredients(recipe)).map((item, index) => (\n    <p\n      data-testid={`${index}-ingredient-name-and-measure`}\n    >{`${item[0]} ${item[1]}`}</p>\n  ));\n\nconst mapStateToProps = (state) => ({\n  recipe: state.DetailReducer.id,\n});\n\nIngredients.propTypes = {\n  recipe: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(mapStateToProps, null)(Ingredients);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst RecipeVideo = ({ recipe }) => (\n  <div>\n    <h3>Video</h3>\n    <embed\n      data-testid=\"video\"\n      src={recipe[0].strYoutube.replace('watch?v=', 'embed/')}\n      width=\"250\"\n      height=\"200\"\n    />\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  recipe: state.DetailReducer.id,\n});\n\nRecipeVideo.propTypes = {\n  recipe: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(mapStateToProps, null)(RecipeVideo);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './RecipeCards.css';\n\nconst RecomendationCards = ({ recomendation, currentLocation }) => {\n  const [counter, setCounter] = useState(1);\n  const recomendationType = currentLocation === '/comidas' ? 'Drink' : 'Meal';\n\n  return (\n    <div className=\"recomendationContainer\">\n      <button disabled={counter === 1} onClick={() => setCounter(counter - 1)} >{'<'}</button>\n      {recomendation.slice(0, 6).map((recipe, index) => (\n        <div\n          key={recipe[`id${recomendationType}`]}\n          style={{ display: (counter === index || counter === index + 1) ? '' : 'none' }}\n          className=\"reconedationCard\"\n        >\n          <img\n            data-testid={`${index}-recomendation-card`}\n            src={recipe[`str${recomendationType}Thumb`]}\n            alt={`${recomendationType} Card`}\n            className=\"recipe-photo\"\n          />\n          <h3 data-testid={`${index}-recomendation-title`}>\n            {recipe[`str${recomendationType}`]}\n          </h3>\n        </div>\n      ))\n      }\n      <button disabled={counter === 5} onClick={() => setCounter(counter + 1)}>{'>'}</button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  recomendation: state.DetailReducer.recomendation,\n  currentLocation: state.updateLocation.currentLocation,\n});\n\nRecomendationCards.propTypes = {\n  recomendation: PropTypes.arrayOf(PropTypes.string).isRequired,\n  currentLocation: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, null)(RecomendationCards);\n","import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { changeBtnStart } from '../actions/index';\n\nimport './StartRecipe.css';\n\nconst StartRecipe = ({ btnStart, currentLocation }) => {\n  const dispatch = useDispatch();\n\n  const title = btnStart === false ? 'Iniciar Receita' : 'Continuar Receita';\n\n  const id = window.location.pathname.slice(9);\n\n  const initialPath = currentLocation === '/comidas' ? '/comidas' : '/bebidas';\n\n  return (\n    <Link to={`${initialPath}/${id}/in-progress`}>\n      <button\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        className=\"btn-start-recipe\"\n        onClick={() => dispatch(changeBtnStart())}\n      >\n        {title}\n      </button>\n    </Link>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  btnStart: state.startRecipe.startRecipe,\n  currentLocation: state.updateLocation.currentLocation,\n});\n\nStartRecipe.propTypes = {\n  btnStart: PropTypes.bool.isRequired,\n  currentLocation: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, null)(StartRecipe);\n","import React, { useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { changeLocation } from '../actions/index';\nimport FetchDetailIdAPI from '../actions/detailActionsId';\nimport FetchDetailRecomandAPI from '../actions/detailActionsRecomand';\n\nimport RecipeDetails from '../components/RecipeDetails';\nimport Ingredients from '../components/Ingredients';\nimport RecipeVideo from '../components/RecipeVideo';\nimport RecomendationCards from '../components/RecomendationCards';\nimport StartRecipe from '../components/StartRecipe';\n\nconst DetailsPage = ({ currentLocation, recipe, recomendation }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(changeLocation(window.location.pathname.slice(0, 8)));\n    const pageType =\n      // currentLocation === '/comidas'\n      window.location.pathname.slice(0, 8) === '/comidas'\n        ? 'recommendation_drink'\n        : 'recommendation_food';\n    dispatch(FetchDetailRecomandAPI({ searchOption: pageType }));\n    dispatch(\n      FetchDetailIdAPI({\n        searchOption: 'idRecipe',\n        searchedValue: window.location.pathname.slice(9),\n      }),\n    );\n  }, []);\n\n  const recipeType = currentLocation === '/comidas' ? 'Meal' : 'Drink';\n\n  return (\n    <div>\n      {recipe.length > 0 && <RecipeDetails />}\n      {recipe.length > 0 && <Ingredients />}\n      {recipeType === 'Meal' && recipe.length > 0 && <RecipeVideo />}\n      {recomendation.length > 0 && <RecomendationCards />}\n      <StartRecipe />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  currentLocation: state.updateLocation.currentLocation,\n  recipe: state.DetailReducer.id,\n  recomendation: state.DetailReducer.recomendation,\n});\n\nDetailsPage.propTypes = {\n  currentLocation: PropTypes.string.isRequired,\n  recipe: PropTypes.arrayOf(PropTypes.string).isRequired,\n  recomendation: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(mapStateToProps, null)(DetailsPage);\n","import React, { useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport RecipeDetails from '../components/RecipeDetails';\n\nimport objIngredients from '../services/listIngredients';\nimport FetchDetailIdAPI from '../actions/detailActionsId';\nimport { changeLocation } from '../actions/index';\n\nconst RecipeInProgress = ({ recipe, recipeID }) => {\n  // const [isDisabled, enableBtn] = useState(true);\n  // const [checked, setChecked] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(changeLocation(window.location.pathname.slice(0, 8)));\n    if (recipe.length === 0) {\n      dispatch(\n        FetchDetailIdAPI({\n          searchOption: 'idRecipe',\n          searchedValue: recipeID,\n        }),\n      );\n    }\n  }, []);\n\n  const ingredientsList = () =>\n    Object.entries(objIngredients(recipe)).map((item, index) => (\n      <div data-testid={`${index}-ingredient-step`}>\n        <label\n          htmlFor={`${item[0]} - ${item[1]}`}\n          key={`${item[0]} - ${item[1]}`}\n        >\n          {`${item[0]} - ${item[1]}`}\n          <input\n            // data-testid={`${index}-ingredient-step`}\n            type=\"checkbox\"\n            name={`${item[0]} - ${item[1]}`}\n            // checked={checked}\n            // onChange={() => setChecked(!checked)}\n          />\n        </label>\n      </div>\n    ));\n\n  return (\n    <div>\n      {recipe.length > 0 && <RecipeDetails />}\n      {recipe.length > 0 && ingredientsList()}\n      <Link to=\"/receitas-feitas\">\n        <button type=\"button\" data-testid=\"finish-recipe-btn\" disabled>\n          Finalizar Receita\n        </button>\n      </Link>\n    </div>\n  );\n};\n\nconst mapStateToProps = (\n  state,\n  {\n    match: {\n      params: { id },\n    },\n  },\n) => ({\n  recipe: state.DetailReducer.id,\n  recipeID: id,\n});\n\nRecipeInProgress.propTypes = {\n  recipe: PropTypes.arrayOf(PropTypes.string).isRequired,\n  recipeID: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, null)(RecipeInProgress);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport profileIcon from '../images/profileIcon.svg';\nimport './ExploreHeader.css';\n\nconst ExploreHeader = ({ title }) => (\n  <header className=\"header-explore\">\n    <Link to=\"/perfil\">\n      <img src={profileIcon} alt=\"Profile Icon\" data-testid=\"profile-top-btn\" />\n    </Link>\n    <h3 data-testid=\"page-title\">{title}</h3>\n  </header>\n);\n\nExploreHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default ExploreHeader;\n","import React from 'react';\n\nimport ExploreHeader from '../components/ExploreHeader';\n\nconst DoneRecipes = () => (\n  <div>\n    <ExploreHeader title={'Receitas Feitas'} />\n  </div>\n);\n\nexport default DoneRecipes;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport FavoriteButton from '../components/FavoriteButton';\nimport ExploreHeader from '../components/ExploreHeader';\nimport ShareButton from '../components/ShareButton';\n\nconst rendersFilterOption = (filterSetting, setFilterSetting) => {\n  const filterOptionInput = [\n    { label: 'Meal', value: 'comida', testid: 'filter-by-food-btn' },\n    { label: 'Drink', value: 'bebida', testid: 'filter-by-drink-btn' },\n    { label: 'All', value: '', testid: 'filter-by-all-btn' },\n  ];\n  return (\n    <div>\n      {filterOptionInput.map((item) => (\n        <button\n          key={item.label}\n          name=\"filterValue\"\n          value={item.value}\n          data-testid={item.testid}\n          onClick={(event) => setFilterSetting(event.target.value)}\n        >\n          {item.label}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nconst FavoriteRecipes = () => {\n  const { favoriteListFetching } = useSelector((state) => state.FavoritesReducer);\n  const [favoriteRecipes, setFavoriteRecipes] = useState([]);\n  useEffect(() => {\n    setFavoriteRecipes(JSON.parse(localStorage.getItem('favoriteRecipes')));\n  }, [favoriteListFetching]);\n  const [filterSetting, setFilterSetting] = useState('');\n  return (\n    <div>\n      <ExploreHeader title={'Receitas Favoritas'} />\n      {rendersFilterOption(filterSetting, setFilterSetting)}\n      <div>\n        {favoriteRecipes != null &&\n          favoriteRecipes\n            .filter((recipe) => recipe.type.includes(filterSetting))\n            .map((recipe, index) => (\n              <div>\n                <FavoriteButton testid={index} recipe={[{ id: recipe.id }]} />\n                <ShareButton\n                  idInput={recipe.id}\n                  testid={index}\n                  type={`${recipe.type}s`}\n                />\n                {recipe.type === 'comida' && (\n                  <h4 data-testid={`${index}-horizontal-top-text`}>\n                    {`${recipe.area} - ${recipe.category}`}\n                  </h4>\n                )}\n                {recipe.type === 'bebida' && (\n                  <h4 data-testid={`${index}-horizontal-top-text`}>{recipe.alcoholicOrNot}</h4>\n                )}\n                <Link to={`/${recipe.type}s/${recipe.id}`}>\n                  <h3 data-testid={`${index}-horizontal-name`}>{recipe.name}</h3>\n                  <img\n                    data-testid={`${index}-horizontal-image`}\n                    src={recipe.image}\n                    alt={recipe.name}\n                    className=\"recipe-photo\"\n                  />\n                </Link>\n              </div>\n            ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FavoriteRecipes;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ExploreHeader from '../components/ExploreHeader';\nimport Footer from '../components/Footer';\n\nconst Explore = () => (\n  <div>\n    <ExploreHeader title={'Explorar'} />\n    <div className=\"row justify-content-around mt-2\">\n      <Link to=\"/explorar/comidas\">\n        <button type=\"button\" data-testid=\"explore-food\" className=\"btn btn-info\">\n          Explorar Comidas\n      </button>\n      </Link>\n      <Link to=\"/explorar/bebidas\">\n        <button type=\"button\" data-testid=\"explore-drinks\" className=\"btn btn-info\">\n          Explorar Bebidas\n      </button>\n      </Link>\n    </div>\n    <Footer />\n  </div>\n);\n\nexport default Explore;\n","import getRecipesAPI from '../services/theMealDBAPI';\n\nexport const REQUEST_RANDOM_API = 'REQUEST_RANDOM_API';\nexport const RECEIVE_RANDOM_API_SUCCESS = 'RECEIVE_RANDOM_API_SUCCESS';\nexport const RECEIVE_RANDOM_API_FAILURE = 'RECEIVE_RANDOM_API_FAILURE';\n\nconst requestRandomAPI = () => ({\n  type: REQUEST_RANDOM_API,\n});\n\nconst requestRandomAPISuccess = (data) => ({\n  type: RECEIVE_RANDOM_API_SUCCESS,\n  payload: data,\n});\n\nconst receiveRandomAPIFailure = (error) => ({\n  type: RECEIVE_RANDOM_API_FAILURE,\n  payload: error,\n});\n\nfunction callAPI(typepage) {\n  const pageType = typepage === '/comidas' ? 'themeal' : 'thecocktail';\n  const url = `https://www.${pageType}db.com/api/json/v1/1/random.php`;\n  return getRecipesAPI(url);\n}\n\nexport default function FetchRandomAPI(typepage) {\n  return (dispatch) => {\n    dispatch(requestRandomAPI());\n    return callAPI(typepage).then(\n      (data) => dispatch(requestRandomAPISuccess(data)),\n      (error) => dispatch(receiveRandomAPIFailure(error.message)),\n    );\n  };\n}\n","import React, { useState } from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport ExploreHeader from '../components/ExploreHeader';\nimport Footer from '../components/Footer';\n\nimport FetchRandomAPI from '../actions/RandomActions';\n\nconst ExploreDrinksOrMeals = ({ id, isFetchingRandom }) => {\n  const [redirect, setRedirect] = useState(false);\n  const dispatch = useDispatch();\n  const initialPath = window.location.pathname.slice(9, 17);\n  const pageURL = window.location.pathname;\n  const recipeType = pageURL === '/explorar/comidas' ? 'Meal' : 'Drink';\n  const headerTitle =\n    pageURL === '/explorar/comidas' ? 'Explorar Comidas' : 'Explorar Bebidas';\n\n  const handleClick = () => {\n    setRedirect(true);\n    dispatch(FetchRandomAPI(initialPath));\n  };\n\n  if (redirect && !isFetchingRandom) {\n    return <Redirect to={`${initialPath}/${id[0][`id${recipeType}`]}`} />;\n  }\n\n  return (\n    <div>\n      <ExploreHeader title={headerTitle} />\n    <div className=\"row justify-content-around\">\n\n      <Link to={`${pageURL}/ingredientes`}>\n        <button type=\"button\" data-testid=\"explore-by-ingredient\" className=\"btn btn-info mt-2\">\n          Por Ingredientes\n        </button>\n      </Link>\n      {pageURL === '/explorar/comidas' && (\n        <Link to={`${pageURL}/area`}>\n          <button type=\"button\" data-testid=\"explore-by-area\" className=\"btn btn-info mt-2\">\n            Por Local de Origem\n          </button>\n        </Link>\n      )}\n      <button\n      className=\"btn btn-info mt-2\"\n        type=\"button\"\n        data-testid=\"explore-surprise\"\n        onClick={() => handleClick()}\n      >\n        Me Surpreenda!\n      </button>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  id: state.DetailReducer.id,\n  isFetchingRandom: state.DetailReducer.isFetchingRandom,\n});\n\nExploreDrinksOrMeals.propTypes = {\n  id: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isFetchingRandom: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, null)(ExploreDrinksOrMeals);\n","import getRecipesAPI from '../services/theMealDBAPI';\n\nexport const REQUEST_INGREDIENTS_API = 'REQUEST_INGREDIENTS_API';\nexport const RECEIVE_INGREDIENTS_API_SUCCESS =\n  'RECEIVE_INGREDIENTS_API_SUCCESS';\nexport const RECEIVE_INGREDIENTS_API_FAILURE =\n  'RECEIVE_INGREDIENTS_API_FAILURE';\nexport const REQUEST_RESET_FETCH_INGREDIENTS_STATE =\n  'REQUEST_RESET_FETCH_INGREDIENTS_STATE';\nexport const REQUEST_RESET_INGREDIENTS_STATE =\n  'REQUEST_RESET_INGREDIENTS_STATE';\n\nexport const requestResetIngredientsAPI = () => ({\n  type: REQUEST_RESET_FETCH_INGREDIENTS_STATE,\n});\n\nexport const requestResetIngredients = () => ({\n  type: REQUEST_RESET_INGREDIENTS_STATE,\n});\n\nconst requestIngredientsAPI = () => ({\n  type: REQUEST_INGREDIENTS_API,\n});\n\nconst requestIngredientsAPISuccess = (data) => ({\n  type: RECEIVE_INGREDIENTS_API_SUCCESS,\n  payload: data,\n});\n\nconst receiveIngredientsAPIFailure = (error) => ({\n  type: RECEIVE_INGREDIENTS_API_FAILURE,\n  payload: error,\n});\n\nfunction callAPI(typepage) {\n  const pageType = typepage === '/comidas' ? 'themeal' : 'thecocktail';\n  const url = `https://www.${pageType}db.com/api/json/v1/1/list.php?i=list`;\n  return getRecipesAPI(url);\n}\n\nexport default function FetchIngredientsAPI() {\n  requestIngredientsAPI();\n  return (dispatch, state) => {\n    const {\n      updateLocation: { currentLocation: typepage },\n    } = state();\n    // typepage = '/comidas'; //MUST_REMOVE\n    dispatch(requestIngredientsAPI());\n    return callAPI(typepage).then(\n      (data) => dispatch(requestIngredientsAPISuccess(data)),\n      (error) => dispatch(receiveIngredientsAPIFailure(error.message)),\n    );\n  };\n}\n","import React, { useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport ExploreHeader from '../components/ExploreHeader';\nimport Footer from '../components/Footer';\n\nimport FetchIngredientsAPI from '../actions/ingredientsActions';\nimport { changeLocation } from '../actions/index';\nimport FetchThemealAPI, { fetchByIngredient } from '../actions/themealdb';\n\nconst ExploreByIngredient = ({\n  isFetchingIngredients,\n  ingredients,\n  isFetchByIngredient,\n  isFetchingRecipes,\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(changeLocation(window.location.pathname.slice(9, 17)));\n    dispatch(FetchIngredientsAPI());\n  }, []);\n\n  const pageType =\n    window.location.pathname.slice(9, 17) === '/comidas'\n      ? 'themeal'\n      : 'thecocktail';\n\n  const ingredientType =\n    window.location.pathname.slice(9, 17) === '/comidas'\n      ? 'Ingredient'\n      : 'Ingredient1';\n\n  const handleClick = (event, ingredient) => {\n    event.preventDefault();\n    dispatch(fetchByIngredient());\n    dispatch(\n      FetchThemealAPI({\n        searchOption: 'ingredient',\n        searchedValue: ingredient,\n      }),\n    );\n  };\n\n  const renderIngredientCards = (arrIngredients) => {\n    return (\n      <div className=\"container\">\n        {arrIngredients.slice(0, 12).map((item, index) => (\n        <div class=\"row justify-content-center m-3\">\n          <div class=\"card text-center\" style={{ width: '18rem' }}>\n          <Link\n            to={window.location.pathname.slice(9, 17)}\n            onClick={(event) => handleClick(event, item[`str${ingredientType}`])}\n          >\n            <div data-testid={`${index}-ingredient-card`}>\n              <img\n                data-testid={`${index}-card-img`}\n                src={`https://www.${pageType}db.com/images/ingredients/${\n                  item[`str${ingredientType}`]\n                  }-Small.png`}\n                alt=\"Ingredient Card\"\n              />\n              <p data-testid={`${index}-card-name`}>\n                {item[`str${ingredientType}`]}\n              </p>\n            </div>\n          </Link>\n      </div>\n      </div>\n        ))\n        }\n      </div>\n\n    )\n  };\n\n  if (isFetchByIngredient && !isFetchingRecipes) {\n    return <Redirect to={window.location.pathname.slice(9, 17)} />;\n  }\n\n  return (\n    <div>\n      <ExploreHeader title={'Explorar Ingredientes'} />\n      {isFetchingIngredients && 'Loading...'}\n      {ingredients.length > 0 && renderIngredientCards(ingredients)}\n      <Footer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isFetchingIngredients: state.IngredientsReducer.isFetchingIngredients,\n  ingredients: state.IngredientsReducer.ingredients,\n  isFetchByIngredient: state.ThemealDB.isFetchByIngredient,\n  isFetchingRecipes: state.ThemealDB.isFetching,\n});\n\nExploreByIngredient.propTypes = {\n  isFetchingIngredients: PropTypes.bool.isRequired,\n  ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isFetchByIngredient: PropTypes.bool.isRequired,\n  isFetchingRecipes: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, null)(ExploreByIngredient);\n","import getRecipesAPI from '../services/theMealDBAPI';\n\nexport const REQUEST_AREA_API = 'REQUEST_AREA_API';\nexport const RECEIVE_AREA_API_SUCCESS = 'RECEIVE_AREA_API_SUCCESS';\nexport const RECEIVE_AREA_API_FAILURE = 'RECEIVE_AREA_API_FAILURE';\nexport const REQUEST_RESET_FETCH_AREA_STATE = 'REQUEST_RESET_FETCH_AREA_STATE';\nexport const REQUEST_RESET_AREA_STATE = 'REQUEST_RESET_AREA_STATE';\n\nexport const requestResetAreaAPI = () => ({\n  type: REQUEST_RESET_FETCH_AREA_STATE,\n});\n\nexport const requestResetArea = () => ({\n  type: REQUEST_RESET_AREA_STATE,\n});\n\nconst requestAreaAPI = () => ({\n  type: REQUEST_AREA_API,\n});\n\nconst requestAreaAPISuccess = (data) => ({\n  type: RECEIVE_AREA_API_SUCCESS,\n  payload: data,\n});\n\nconst receiveAreaAPIFailure = (error) => ({\n  type: RECEIVE_AREA_API_FAILURE,\n  payload: error,\n});\n\nfunction callAPI() {\n  const url = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n  return getRecipesAPI(url);\n}\n\nexport default function FetchAreaAPI() {\n  requestAreaAPI();\n  return (dispatch) => {\n    dispatch(requestAreaAPI());\n    return callAPI().then(\n      (data) => dispatch(requestAreaAPISuccess(data)),\n      (error) => dispatch(receiveAreaAPIFailure(error.message)),\n    );\n  };\n}\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useDispatch } from 'react-redux';\n\nimport Header from '../components/Header';\nimport RecipeCards from '../components/RecipeCards';\nimport Footer from '../components/Footer';\n\nimport { changeLocation } from '../actions/index';\nimport FetchThemealAPI from '../actions/themealdb';\nimport FetchAreaAPI from '../actions/areaActions';\n\nconst ExploreByArea = ({ isFetching, recipes, isFetchingArea, areas }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(changeLocation(window.location.pathname.slice(9, 17)));\n    dispatch(FetchThemealAPI({ searchedValue: '' }));\n    dispatch(FetchAreaAPI());\n  }, []);\n\n  const handleSelect = (value) => (\n    value === 'All'\n      ? dispatch(FetchThemealAPI({ searchedValue: '' }))\n      : dispatch(\n          FetchThemealAPI({\n            searchOption: 'area',\n            searchedValue: value,\n          }),\n        )\n  );\n\n  const dropdownArea = (arrAreas) => (\n    <div>\n      <select\n        data-testid=\"explore-by-area-dropdown\"\n        onChange={(event) => handleSelect(event.target.value)}\n      >\n        <option data-testid=\"All-option\" defaultValue>All</option>\n        {arrAreas.map((area) => (\n          <option\n            data-testid={`${area.strArea}-option`}\n            key={area.strArea}\n            value={area.strArea}\n          >\n            {area.strArea}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n\n  return (\n    <div>\n      <Header title={'Explorar Origem'} />\n      {isFetching && 'Loading...'}\n      {!isFetchingArea && areas.length > 0 && dropdownArea(areas)}\n      {!isFetching && recipes !== null && <RecipeCards />}\n      <Footer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isFetching: state.ThemealDB.isFetching,\n  recipes: state.ThemealDB.recipes,\n  isFetchingArea: state.AreaReducer.isFetchingArea,\n  areas: state.AreaReducer.areas,\n});\n\nExploreByArea.propTypes = {\n  // searchBarVisible: PropTypes.bool.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  recipes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isFetchingArea: PropTypes.bool.isRequired,\n  areas: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(mapStateToProps, null)(ExploreByArea);\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport profileIcon from '../images/profileIcon.svg';\nimport './Profile.css';\n\nconst Profile = () => {\n  const [userLocalStorage, setUserLocalStorage] = useState('');\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('user')) != null) {\n      setUserLocalStorage(JSON.parse(localStorage.getItem('user')).email);\n    }\n  }, []);\n\n  return (\n    <div>\n      <header className=\"header-profile\">\n        <img\n          src={profileIcon}\n          alt=\"Profile Icon\"\n          data-testid=\"profile-top-btn\"\n        />\n        <h3 data-testid=\"page-title\">Perfil</h3>\n      </header>\n      <p data-testid=\"profile-email\">{userLocalStorage}</p>\n      <Link to=\"/receitas-feitas\">\n        <button type=\"button\" data-testid=\"profile-done-btn\">\n          Receitas Feitas\n        </button>\n      </Link>\n      <Link to=\"/receitas-favoritas\">\n        <button type=\"button\" data-testid=\"profile-favorite-btn\">\n          Receitas Favoritas\n        </button>\n      </Link>\n      <Link to=\"/\">\n        <button\n          type=\"button\"\n          data-testid=\"profile-logout-btn\"\n          onClick={() => localStorage.clear()}\n        >\n          Sair\n        </button>\n      </Link>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\n\nconst NotFound = () => <h1>Not Found</h1>;\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Login from './pages/Login';\nimport MainPageFoods from './pages/MainPageFoods';\nimport MainPageDrinks from './pages/MainPageDrinks';\nimport DetailsPage from './pages/DetailsPage';\nimport RecipeInProgress from './pages/RecipeInProgress';\nimport DoneRecipes from './pages/DoneRecipes';\nimport FavoriteRecipes from './pages/FavoriteRecipes';\nimport Explore from './pages/Explore';\nimport ExploreDrinksOrMeals from './pages/ExploreDrinksOrMeals';\nimport ExploreByIngredient from './pages/ExploreByIngredients';\nimport ExploreByArea from './pages/ExploreByArea';\nimport Profile from './pages/Profile';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/comidas\" component={MainPageFoods} />\n      <Route exact path=\"/bebidas\" component={MainPageDrinks} />\n      <Route exact path=\"/comidas/:id\" component={DetailsPage} />\n      <Route exact path=\"/bebidas/:id\" component={DetailsPage} />\n      <Route\n        exact\n        path=\"/comidas/:id/in-progress\"\n        component={RecipeInProgress}\n      />\n      <Route\n        exact\n        path=\"/bebidas/:id/in-progress\"\n        component={RecipeInProgress}\n      />\n      <Route exact path=\"/receitas-feitas\" component={DoneRecipes} />\n      <Route exact path=\"/receitas-favoritas\" component={FavoriteRecipes} />\n      <Route exact path=\"/explorar\" component={Explore} />\n      <Route exact path=\"/explorar/comidas\" component={ExploreDrinksOrMeals} />\n      <Route exact path=\"/explorar/bebidas\" component={ExploreDrinksOrMeals} />\n      <Route\n        exact\n        path=\"/explorar/comidas/ingredientes\"\n        component={ExploreByIngredient}\n      />\n      <Route\n        exact\n        path=\"/explorar/bebidas/ingredientes\"\n        component={ExploreByIngredient}\n      />\n      <Route exact path=\"/explorar/comidas/area\" component={ExploreByArea} />\n      <Route exact path=\"/perfil\" component={Profile} />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import {\n  REQUEST_THEMEALAPI,\n  RECEIVE_THEMEALAPI_SUCCESS,\n  RECEIVE_THEMEALAPI_FAILURE,\n  REQUEST_RESET_FETCH_STATE,\n  REQUEST_RESET_RECIPES_STATE,\n  FETCH_BY_INGREDIENT,\n  CHANGE_FETCH_BY_INGREDIENT,\n} from '../types/Themealdb';\n\nconst initialState = {\n  isFetching: false,\n  recipes: [],\n  error: '',\n  isFetchByIngredient: false,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  console.log('Action', type, payload);\n  switch (type) {\n    case REQUEST_RESET_FETCH_STATE:\n      return { ...state, isFetching: false };\n    case REQUEST_RESET_RECIPES_STATE:\n      return { ...state, recipes: [] };\n    case REQUEST_THEMEALAPI:\n      return { ...state, isFetching: true };\n    case RECEIVE_THEMEALAPI_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        recipes: payload[Object.keys(payload)],\n      };\n    case RECEIVE_THEMEALAPI_FAILURE:\n      return { ...state, isFetching: false, error: payload };\n    case FETCH_BY_INGREDIENT:\n      return {\n        ...state,\n        isFetchByIngredient: true,\n      };\n    case CHANGE_FETCH_BY_INGREDIENT:\n      return {\n        ...state,\n        isFetchByIngredient: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { CHANGE_VISIBILITY } from '../actions/index';\nimport { SEARCH_RESULT_MORE_ONE } from '../actions/searchBarAction';\n\nconst INITIAL_STATE = {\n  isVisible: false,\n  searchResultMoreOne: false,\n};\n\nconst searchBar = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CHANGE_VISIBILITY:\n      return {\n        ...state,\n        isVisible: !state.isVisible,\n      };\n    case SEARCH_RESULT_MORE_ONE:\n      return {\n        ...state,\n        searchResultMoreOne: !state.searchResultMoreOne,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default searchBar;\n","import { SAVE_EMAIL } from '../actions/index';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst saveEmail = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SAVE_EMAIL:\n      return {\n        ...state,\n        email: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default saveEmail;\n","import { CHANGE_LOCATION } from '../actions/index';\n\nconst INITIAL_STATE = {\n  currentLocation: '',\n};\n\nconst updateLocation = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CHANGE_LOCATION:\n      return {\n        ...state,\n        currentLocation: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default updateLocation;\n","import {\n  REQUEST_CATEGORIESAPI,\n  RECEIVE_CATEGORIESAPI_SUCCESS,\n  RECEIVE_CATEGORIESAPI_FAILURE,\n  REQUEST_RESET_FETCH_CATEGORIES_STATE,\n  REQUEST_RESET_CATEGORIES_STATE,\n} from '../actions/categoriesdbActions';\n\nconst initialState = {\n  isFetchingCategories: false,\n  categories: [],\n  errorAPICategories: '',\n};\n\nexport default (state = initialState, { type, payload }) => {\n  console.log('Action', type, payload);\n  switch (type) {\n    case REQUEST_RESET_FETCH_CATEGORIES_STATE:\n      return { ...state, isFetching: false };\n    case REQUEST_RESET_CATEGORIES_STATE:\n      return { ...state, categories: [] };\n    case REQUEST_CATEGORIESAPI:\n      return { ...state, isFetching: true };\n    case RECEIVE_CATEGORIESAPI_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        categories: payload[Object.keys(payload)],\n      };\n    case RECEIVE_CATEGORIESAPI_FAILURE:\n      return { ...state, isFetching: false, error: payload };\n    default:\n      return state;\n  }\n};\n","import { CHANGE_BTN_START } from '../actions/index';\n\nconst INITIAL_STATE = {\n  startRecipe: false,\n};\n\nconst startRecipe = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CHANGE_BTN_START:\n      return {\n        ...state,\n        startRecipe: !state.startRecipe,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default startRecipe;\n","import {\n  REQUEST_DETAIL_RECOMAND_API,\n  RECEIVE_DETAIL_RECOMAND_API_SUCCESS,\n  RECEIVE_DETAIL_RECOMAND_API_FAILURE,\n} from '../actions/detailActionsRecomand';\nimport {\n  REQUEST_DETAIL_ID_API,\n  RECEIVE_DETAIL_ID_API_SUCCESS,\n  RECEIVE_DETAIL_ID_API_FAILURE,\n} from '../actions/detailActionsId';\n\nimport {\n  REQUEST_RANDOM_API,\n  RECEIVE_RANDOM_API_SUCCESS,\n  RECEIVE_RANDOM_API_FAILURE,\n} from '../actions/RandomActions';\n\nconst initialState = {\n  isFetchingIdDetail: false,\n  id: [],\n  recomendation: [],\n  error_id: '',\n  error_recomendation: '',\n  error_random: '',\n  isFetchingRandom: false,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  console.log('Action', type, payload);\n  switch (type) {\n    case REQUEST_DETAIL_ID_API:\n      return { ...state, isFetchingIdDetail: true };\n    case REQUEST_DETAIL_RECOMAND_API:\n      return { ...state, isFetchingRecomandDetail: true };\n    case RECEIVE_DETAIL_RECOMAND_API_SUCCESS:\n      return {\n        ...state,\n        isFetchingRecomandDetail: false,\n        recomendation: payload[Object.keys(payload)],\n      };\n    case RECEIVE_DETAIL_RECOMAND_API_FAILURE:\n      return {\n        ...state,\n        isFetchingRecomandDetail: false,\n        error_recomendation: payload,\n      };\n    case RECEIVE_DETAIL_ID_API_SUCCESS:\n      return {\n        ...state,\n        isFetchingIdDetail: false,\n        id: payload[Object.keys(payload)],\n      };\n    case RECEIVE_DETAIL_ID_API_FAILURE:\n      return {\n        ...state,\n        isFetchingIdDetail: false,\n        error_id: payload,\n      };\n    case REQUEST_RANDOM_API:\n      return {\n        ...state,\n        isFetchingRandom: true,\n      };\n    case RECEIVE_RANDOM_API_SUCCESS:\n      return {\n        ...state,\n        isFetchingRandom: false,\n        id: payload[Object.keys(payload)],\n      };\n    case RECEIVE_RANDOM_API_FAILURE:\n      return {\n        ...state,\n        isFetchingRandom: false,\n        error_random: payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  REQUEST_FAVORITE_FETCHING,\n  RECEIVE_FAVORITE_FETCHING_SUCCESS,\n} from '../actions/favoriteAction';\n\nconst initialState = {\n  favoriteListFetching: true,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  console.log('Action Favorites Reducer', type, payload);\n  switch (type) {\n    case REQUEST_FAVORITE_FETCHING:\n      return { ...state, favoriteListFetching: !state.favoriteListFetching };\n    case RECEIVE_FAVORITE_FETCHING_SUCCESS:\n      return { ...state };\n    default:\n      return state;\n  }\n};\n","import {\n  REQUEST_RESET_FETCH_INGREDIENTS_STATE,\n  REQUEST_RESET_INGREDIENTS_STATE,\n  REQUEST_INGREDIENTS_API,\n  RECEIVE_INGREDIENTS_API_SUCCESS,\n  RECEIVE_INGREDIENTS_API_FAILURE,\n} from '../actions/ingredientsActions';\n\nconst INITIAL_STATE = {\n  isFetchingIngredients: false,\n  ingredients: [],\n  errorAPIIngredients: '',\n};\n\nexport default (state = INITIAL_STATE, { type, payload }) => {\n  console.log('Action', type, payload);\n  switch (type) {\n    case REQUEST_RESET_FETCH_INGREDIENTS_STATE:\n      return { ...state, isFetchingIngredients: false };\n    case REQUEST_RESET_INGREDIENTS_STATE:\n      return { ...state, ingredients: [] };\n    case REQUEST_INGREDIENTS_API:\n      return { ...state, isFetchingIngredients: true };\n    case RECEIVE_INGREDIENTS_API_SUCCESS:\n      return {\n        ...state,\n        isFetchingIngredients: false,\n        ingredients: payload[Object.keys(payload)],\n      };\n    case RECEIVE_INGREDIENTS_API_FAILURE:\n      return { ...state, isFetchingIngredients: false, error: payload };\n    default:\n      return state;\n  }\n};\n","import {\n  REQUEST_AREA_API,\n  RECEIVE_AREA_API_SUCCESS,\n  RECEIVE_AREA_API_FAILURE,\n  REQUEST_RESET_FETCH_AREA_STATE,\n  REQUEST_RESET_AREA_STATE,\n} from '../actions/areaActions';\n\nconst INITIAL_STATE = {\n  isFetchingArea: false,\n  areas: [],\n  errorAPIAreas: '',\n};\n\nexport default (state = INITIAL_STATE, { type, payload }) => {\n  console.log('Action', type, payload);\n  switch (type) {\n    case REQUEST_RESET_FETCH_AREA_STATE:\n      return { ...state, isFetchingArea: false };\n    case REQUEST_RESET_AREA_STATE:\n      return { ...state, areas: [] };\n    case REQUEST_AREA_API:\n      return { ...state, isFetchingArea: true };\n    case RECEIVE_AREA_API_SUCCESS:\n      return {\n        ...state,\n        isFetchingArea: false,\n        areas: payload[Object.keys(payload)],\n      };\n    case RECEIVE_AREA_API_FAILURE:\n      return { ...state, isFetchingArea: false, error: payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport ThemealDB from '../reducers/ThemealDB';\nimport searchBar from './searchBar';\nimport saveEmail from './saveEmail';\nimport updateLocation from './saveLocation';\nimport CategoriesReducer from '../reducers/CategoriesReducer';\nimport startRecipe from './startRecipe';\nimport DetailReducer from '../reducers/DetailReducer';\nimport FavoritesReducer from './FavoritesReducer';\nimport IngredientsReducer from './IngredientsReducer';\nimport AreaReducer from './AreaReducer';\n\nconst rootReducer = combineReducers({\n  searchBar,\n  saveEmail,\n  ThemealDB,\n  updateLocation,\n  CategoriesReducer,\n  startRecipe,\n  DetailReducer,\n  FavoritesReducer,\n  IngredientsReducer,\n  AreaReducer,\n});\n\nexport default rootReducer;\n","export const REQUEST_THEMEALAPI = 'REQUEST_THEMEALAPI';\nexport const RECEIVE_THEMEALAPI_SUCCESS = 'RECEIVE_THEMEALAPI_SUCCESS';\nexport const RECEIVE_THEMEALAPI_FAILURE = 'RECEIVE_THEMEALAPI_FAILURE';\nexport const REQUEST_RESET_FETCH_STATE = 'REQUEST_RESET_FETCH_STATE';\nexport const REQUEST_RESET_RECIPES_STATE = 'REQUEST_RESET_RECIPES_STATE';\nexport const FETCH_BY_INGREDIENT = 'FETCH_BY_INGREDIENT';\nexport const CHANGE_FETCH_BY_INGREDIENT = 'CHANGE_FETCH_BY_INGREDIENT';\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport thunk from 'redux-thunk';\n\nimport rootReducer from '../reducers/index';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport store from './store/index';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}